#include <QtDebug>

#include <opencv2/opencv.hpp>
#include <opencv2/objdetect.hpp>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/imgproc.hpp>

#include <QCloseEvent>
#include <QMessageBox>
#include <opencv2/highgui.hpp>
#include <opencv2/calib3d.hpp>
#include <opencv2/core.hpp>
#include <opencv2/videoio.hpp>
#include <opencv2/videostab.hpp>
#include "cameraopentest.h"
#include "ui_cameraopentest.h"


//********************************************
// Camera Open Test 29-11-2019
//********************************************
/* *
 * Podejmuje próbę otwarcia strumienia wideo.
 * Resultat sygnalizuje statusem None / OK.
 * */
//********************************************

CameraOpenTest::CameraOpenTest(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::CameraOpenTest)
{
    ui->setupUi(this);
}

void CameraOpenTest::closeEvent(QCloseEvent * event) {
    if(capture.isOpened()) {
        qDebug() << "Camera is open. You can't close this window. Close video stream first";
        QMessageBox::warning(this, "Warning", "Stop the video before closing the application!");
        event->ignore();
    } else
        event->accept();

}

CameraOpenTest::~CameraOpenTest()
{
    delete ui;
}

void CameraOpenTest::on_commandLinkButton_clicked()
{
<<<<<<< HEAD
    if(capture.isOpened())
    {
        qDebug() << " Closing camera";
        capture.release();
        ui->commandLinkButton->setText("Check Camera");
        ui->lblStatus->setText("None");

    }
    else {
        capture.open(iCameraId);
        qDebug() << "Opening Camera nr: " << iCameraId;
        if(!capture.isOpened())
        {
            qDebug() << "Camera open problem";
            ui->comboBox->setStyleSheet("color: #ee3333");
            ui->lblStatus->setText("None");
            ui->lblStatus->setStyleSheet("color: #ee3333");
        }
        else
        {
            qDebug() << "Camera is open";
            ui->comboBox->setStyleSheet("color: #0066cc");
            ui->commandLinkButton->setText("Close Camera");
            ui->lblStatus->setText("OK");
            ui->lblStatus->setStyleSheet("color: #0066cc");
=======
    if(capture.isOpened()) {
        capture.release();
        qDebug() << "Release Camera";
        ui->comboBox->setStyleSheet("color: #0066cc");
        ui->commandLinkButton->setText("Check camera");
    } else {
        capture.open(iCameraId);
        qDebug() << "Opening Camera nr: " << iCameraId;
        if(!capture.isOpened()) {
            qDebug() << "Camera open problem";
            ui->comboBox->setStyleSheet("color: #ee3333");
            ui->commandLinkButton->setText("Check camera");
        }
        else {
            qDebug() << "Camera is open";
            ui->comboBox->setStyleSheet("color: #0066cc");
            ui->commandLinkButton->setText("Close camera");
>>>>>>> 6817a8c50028309aeb21dda4b7eeb867442c0399
        }
    }
}

void CameraOpenTest::on_comboBox_activated(int index)
{
    qDebug() << "Changing Camera nr: " << iCameraId << " to: " << index;
    iCameraId = index;
}
